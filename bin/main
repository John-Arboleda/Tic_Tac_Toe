#!/usr/bin/env ruby

class Player
  attr_reader :name
  attr_reader :marker
  def initialize(name, marker)
    @name = name
    @marker = marker
  end
end

class Board 
  @@moves_counter=0  
  attr_accessor :plays_array
  def initialize (plays_array)
    @plays_array=plays_array
  end

  def print_board 
    col_separator, row_separator = " | ", " ----+---+----"
    puts row_separator
    3.times do |i|
        print col_separator
        3.times { |j| print "#{@plays_array[j+(i*3)].to_s}" + col_separator}
        puts "\n" << row_separator
    end
  end

  def make_a_move (num, marker)
    if (!num.is_a?(Integer) || !num.between?(1,9))
      puts "Invalid move. Please enter a number between 1 and 9"
    elsif @plays_array[num - 1].is_a?(String)
      puts "Invalid move. Position already taken"
    else
      @plays_array[num - 1] = marker
      @@moves_counter+=1
    end
  end

  def self.counter
    @@moves_counter
  end
end




# board1.make_a_move(1,"X")
# board1.print_board
# board1.make_a_move("5","X")
# board1.print_board
# board1.make_a_move(1,"X")
# board1.print_board


puts "Enter player 1 name"
player_1 = Player.new(gets.chomp,"X")
puts "Enter player 2 name"
player_2 = Player.new(gets.chomp,"O")
board1=Board.new([1,2,3,4,5,6,7,8,9])
board1.print_board


puts "#{player_1.name} please enter a move:"
move_p1=gets.chomp.to_i
board1.make_a_move(move_p1,player_1.marker)
board1.print_board
puts "#{player_2.name} please enter a move:"
move_p2=gets.chomp.to_i
board1.make_a_move(move_p2,player_2.marker)
board1.print_board
puts Board.counter
